name: Build & Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# permissions:
#   contents: read
#   id-token: write
#   packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # - run: git fetch --force --tags

      - name: "Setup Go"
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"
          cache: true
      - run: go test -v -race ./... -cover -covermode=atomic -timeout=90s

      - name: "Setup Qemu"
        uses: docker/setup-qemu-action@v2

      - name: "Setup Docker BuildX"
        uses: docker/setup-buildx-action@v2

      - name: "Login to Docker Hub"
        uses: docker/login-action@v2
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ${{ env.REGISTRY }}
          username: $GITHUB_USER
          password: ${{ secrets.GITHUB_TOKEN }}

      # Actions from this point are happening only on repository branches (not on PRs)
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   if: github.event_name != 'pull_request'
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Compile the source"
        id: compile
        if: github.ref == 'refs/heads/main'
        uses: goreleaser/goreleaser-action@v3
        with:
          args: build --rm-dist --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Release a new version"
        id: release
        uses: goreleaser/goreleaser-action@v3
        if: success() && startsWith(github.ref, 'refs/tags/')
        with:
          args: release --rm-dist --parallelism 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push development images
      #   if: ${{ startsWith(github.ref, 'refs/tags/') != true && github.event_name != 'pull_request' }}
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     platforms: linux/amd64,linux/arm64,linux/arm/v7
      #     push: true
      #     tags: ${{ github.repository }}:master
